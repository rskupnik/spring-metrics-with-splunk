# Telegraf Configuration
# Global tags can be specified here in key="value" format.
[global_tags]
    app = "demo-app"

# Configuration for telegraf agent
[agent]
    ## Default data collection interval for all inputs
    interval = "10s"
    ## Rounds collection interval to 'interval'
    round_interval = true
    ## This controls the size of writes that Telegraf sends to output plugins.
    metric_batch_size = 1000
    ## This buffer only fills when writes fail to output plugin(s).
    metric_buffer_limit = 10000
    ## Collection jitter is used to jitter the collection by a random amount.
    collection_jitter = "0s"
    flush_interval = "10s"
    flush_jitter = "0s"
    precision = ""

    ## Logging configuration:
    debug = true
    ## Run telegraf in quiet mode (error log messages only).
    quiet = false
    ## Specify the log file name. The empty string means to log to stderr.
    logfile = "/var/log/telegraf.log"
    ## Override default hostname, if empty use os.Hostname()
    hostname = ""
    ## If set to true, do no set the "host" tag in the telegraf agent.
    omit_hostname = false


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

[[outputs.http]]
    ## URL is the address to send metrics to
    url = "http://splunk:8088/services/collector"
    ## Timeout for HTTP message
    # timeout = "5s"
    ## Optional TLS Config
    # tls_ca = "/etc/telegraf/ca.pem"
    # tls_cert = "/etc/telegraf/cert.pem"
    # tls_key = "/etc/telegraf/key.pem"
    ## Use TLS but skip chain & host verification
    #insecure_skip_verify = true
    ## Data format to output.
    ## Each data format has it's own unique set of configuration options, read
    ## more about them here:
    ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md
    data_format = "splunkmetric"
    ## Provides time, index, source overrides for the HEC
    splunkmetric_hec_routing = true
    ## Additional HTTP headers
    [outputs.http.headers]
        # Should be set manually to "application/json" for json data_format
        Content-Type = "application/json"
        Authorization = "Splunk 6ce8ed80-682c-4bc1-80bb-30b60e1807ec"
        X-Splunk-Request-Channel = "6ce8ed80-682c-4bc1-80bb-30b60e1807ec"

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# Statsd UDP/TCP Server
[[inputs.statsd]]
    ## Protocol, must be "tcp", "udp", "udp4" or "udp6" (default=udp)
    protocol = "udp"

    ## MaxTCPConnection - applicable when protocol is set to tcp (default=250)
    max_tcp_connections = 250

    ## Address and port to host UDP listener on
    service_address = ":8125"

    ## The following configuration options control when telegraf clears it's cache
    ## of previous values. If set to false, then telegraf will only clear it's
    ## cache when the daemon is restarted.
    ## Reset gauges every interval (default=true)
    delete_gauges = true
    ## Reset counters every interval (default=true)
    delete_counters = true
    ## Reset sets every interval (default=true)
    delete_sets = true
    ## Reset timings & histograms every interval (default=true)
    delete_timings = true

    ## Percentiles to calculate for timing & histogram stats
    percentiles = [90]

    ## separator to use between elements of a statsd metric
    metric_separator = "_"

    ## Parses tags in the datadog statsd format
    ## http://docs.datadoghq.com/guides/dogstatsd/
    parse_data_dog_tags = false
    ## Number of UDP messages allowed to queue up, once filled,
    ## the statsd server will start dropping packets
    allowed_pending_messages = 10000

    ## Number of timing/histogram values to track per-measurement in the
    ## calculation of percentiles. Raising this limit increases the accuracy
    ## of percentiles but also increases the memory usage and cpu time.
    percentile_limit = 1000